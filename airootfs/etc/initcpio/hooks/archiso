#!/usr/bin/ash
#
# SPDX-License-Identifier: GPL-3.0-or-later

_resolve_dev() {
    local device="${1}"
    local delay="${2:-5}"

    case "${device}" in
        'UUID='* | 'LABEL='* | 'PARTUUID='* | 'PARTLABEL='*)
            device="$(blkid -lt "${device}" -o device)"
            ;;
    esac
    if ! poll_device "${device}" "${delay}"; then
        return 1
    fi
    return 0
}

# args: device mountpoint flags opts
_mnt_dev() {
    local dev="${1}"
    local mnt="${2}"
    local flg="${3}"
    local opts="${4}"

    msg ":: Mounting '${dev}' to '${mnt}'"
    if mountpoint -q "${mnt}"; then
        error "ERROR: can't mount '${dev}' on '${mnt}'"
        return 1
    fi
    if ! _resolve_dev "${dev}" "${rootdelay:-30}"; then
        error "ERROR: '${device}' device did not show up after ${delay} seconds..."
        return 1
    fi
    if ! mount --mkdir -o "${opts}" ${flg} "${dev}" "${mnt}"; then
        error "ERROR: Failed to mount '${dev}'"
        return 1
    fi
    msg ":: Device '${dev}' mounted successfully."
    return 0
}

# variables
#   - archiso_device
#   - copytoram
#   - cow_device
#   - cow_spacesize
run_hook() {
    [ -z "${copytoram}" ] && copytoram="y"
    [ -z "${cow_spacesize}" ] && cow_spacesize="256M"

    # set mount handler for archiso
    export mount_handler="archiso_mount_handler"
}

# This function is called normally from init script, but it can be called
# as chain from other mount handlers.
# args: /path/to/newroot
archiso_mount_handler() {
    local newroot="${1}"

    if ! _mnt_dev "${archiso_device}" "/run/archiso/bootmnt" "-r" "defaults"; then
        error "Falling back to interactive prompt"
        launch_interactive_shell
    fi

    local fs_img="/run/archiso/bootmnt/linux/airootfs.erofs"
    if [ ! -f "${fs_img}" ]; then
        error "ERROR: no root file system image found"
        error "Falling back to interactive prompt"
        launch_interactive_shell
    fi

    if [ "${copytoram}" = "y" ]; then
        local fs_img_size="$(du -bs "${fs_img}" | cut -f 1)"
        local copytoram_size="$((fs_img_size + 2 * 1024 * 1024))"
        msg ":: Mounting /run/archiso/copytoram (tmpfs) filesystem, size=${copytoram_size}"
        mount --mkdir -t tmpfs -o "size=${copytoram_size},mode=0755" copytoram /run/archiso/copytoram
        local img_fullname="${fs_img##*/}"
        if command -v pv >/dev/null 2>&1; then
            pv "${fs_img}" >"/run/archiso/copytoram/${img_fullname}"
        else
            cp "${fs_img}" "/run/archiso/copytoram/${img_fullname}"
        fi
        umount -d "/run/archiso/bootmnt"
        fs_img="/run/archiso/copytoram/${img_fullname}"
    fi

    local img_loopdev="$(losetup --find --show --read-only -- "${fs_img}")"
    if ! _mnt_dev "${img_loopdev}" "/run/archiso/airootfs" "-r" "defaults"; then
        error "Falling back to interactive prompt"
        launch_interactive_shell
    fi

    # mount cow
    if ! _mnt_dev "${cow_device}" "/run/archiso/cowspace" "" "defaults"; then
        msg ":: Mounting /run/archiso/cowspace (tmpfs) filesystem, size=${cow_spacesize}..."
        mount --mkdir -t tmpfs -o "size=${cow_spacesize},mode=0755" cowspace /run/archiso/cowspace
    fi

    mkdir -p "/run/archiso/cowspace/upperdir" "/run/archiso/cowspace/workdir"
    mount -t overlay \
        -o "lowerdir=/run/archiso/airootfs,upperdir=/run/archiso/cowspace/upperdir,workdir=/run/archiso/cowspace/workdir" \
        airootfs "${newroot}"
}

